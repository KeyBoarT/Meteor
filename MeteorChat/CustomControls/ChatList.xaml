<UserControl x:Class="MeteorChat.CustomControls.ChatList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewmodel="clr-namespace:MeteorChat.MVVM.ViewModels"
             xmlns:local="clr-namespace:MeteorChat.CustomControls"
             mc:Ignorable="d"
             MinWidth="406"
             x:Name="_Chats">
    <UserControl.Resources>
        <DataTemplate x:Key="ChatButtonItemTemplate">
            <RadioButton GroupName="ChatButton">
                <RadioButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="MinHeight" Value="80"/>
                        <Setter Property="Padding" Value="10"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <!--Bu kısma dikkat etmek lazım DataContext'i kullanıldığı yerden çekiyor kendi DataContext'inde belirtimedi-->
                        <Setter Property="Command" Value="{Binding DataContext.GetSelectedChatCommand, ElementName=_Chats, UpdateSourceTrigger=PropertyChanged}"/>
                        <!--Boş şekilde Binding ifadesi ise dönüş değeri olarak kendi değerini döndürüyor demek-->
                        <Setter Property="CommandParameter" Value="{Binding}"/>
                        <Setter Property="Content" Value="{Binding ContactName}"/>

                        <!--To select the first chat. it is optional. I don't prefer to check the chat automatically so i
                        will comment it out for now -->
                        <Setter Property="IsChecked" Value="{Binding IsSelected, 
                            Mode=TwoWay, 
                            UpdateSourceTrigger=PropertyChanged}"/>

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="20"
                                        Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="True"
                                        x:Name="border">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <!--Will contain contactname, photo, message, message time-->
                                                <RowDefinition Height="Auto"/>

                                                <!--Will contain options such as, archive time, pin chat, delete etc.-->
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <!--#region Contact details-->
                                            <Grid
                                                Grid.Row="0">
                                                <Grid.ColumnDefinitions>
                                                    <!--Profile Photo-->
                                                    <ColumnDefinition Width="Auto"/>

                                                    <!--Contact Name, Message-->
                                                    <ColumnDefinition/>

                                                    <!--Last Message Time-->
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>

                                                <Ellipse Width="50" Height="50">
                                                    <Ellipse.Fill>
                                                        <ImageBrush
                                                            Stretch="UniformToFill"
                                                            ImageSource="{Binding ContactPhoto, TargetNullValue=/assets/8.jpg, FallbackValue=/assets/1.png, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </Ellipse.Fill>
                                                </Ellipse>

                                                <!-- Contact Name & Message-->
                                                <Grid Grid.Column="1"
                                                      Margin="20, 0">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <!--Name-->
                                                        <RowDefinition/>
                                                        <!--Message-->
                                                    </Grid.RowDefinitions>

                                                    <TextBlock
                                                        Text="{Binding ContactName}"
                                                        FontSize="15">
                                                        <TextBlock.Style>
                                                            <Style TargetType="{x:Type TextBlock}">
                                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>

                                                    <TextBlock
                                                        Grid.Row="1"
                                                        Text="{Binding Message}">
                                                        <TextBlock.Style>
                                                            <Style TargetType="{x:Type TextBlock}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </Grid>

                                                <!--Last Message Time-->
                                                <Grid Grid.Column="2">
                                                    <TextBlock
                                                        Text="{Binding LastMessageTime}"
                                                        HorizontalAlignment="Right"/>
                                                </Grid>

                                                <Separator
                                                    Grid.Column="1"
                                                    Grid.ColumnSpan="2"
                                                    VerticalAlignment="Bottom"
                                                    BorderBrush="WhiteSmoke"
                                                    BorderThickness=".5"/>
                                            </Grid>
                                            <!--#endregion-->

                                            <!--#region Options-->
                                            <!--To-Do: Animation Later-->
                                            <!--Height is 0 because we are going to show it on Chat
                                            Button checked event only-->
                                            <!--To-Do: Animation Later-->
                                            <Grid
                                                Grid.Row="1"
                                                Height="Auto">

                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <!--Options Buttons-->
                                                <UniformGrid Columns="4" Grid.Column="1">
                                                    <Button 
                                                        x:Name="IsPinned"
                                                        Style="{StaticResource IconButtonStyle}"
                                                        Command="{Binding DataContext.ChangeChatPinStateCommand, ElementName=_Chats, UpdateSourceTrigger=PropertyChanged}"
                                                        CommandParameter="{Binding}"/>
                                                    <Button 
                                                        x:Name="IsArchived"
                                                        Content="{StaticResource archive}"
                                                        Style="{StaticResource IconButtonStyle}"
                                                        Command="{Binding DataContext.ChangeChatArchiveStateCommand, ElementName=_Chats, UpdateSourceTrigger=PropertyChanged}"
                                                        CommandParameter="{Binding}"/>
                                                    <Button 
                                                        Content="{StaticResource mute}"
                                                        Style="{StaticResource IconButtonStyle}"/>
                                                    <Button 
                                                        Content="{StaticResource trash}"
                                                        Style="{StaticResource IconButtonStyle}"/>
                                                </UniformGrid>
                                            </Grid>
                                            <!--#endregion-->
                                        </Grid>
                                    </Border>

                                    <!--For editing chats pin-->
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsPinned}" Value="True">
                                            <Setter TargetName="IsPinned" Property="Content" Value="{StaticResource unpin}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsPinned}" Value="False">
                                            <Setter TargetName="IsPinned" Property="Content" Value="{StaticResource pinned}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsArchived}" Value="True">
                                            <Setter TargetName="IsArchived" Property="Content" Value="{StaticResource unarchive}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsArchived}" Value="False">
                                            <Setter TargetName="IsArchived" Property="Content" Value="{StaticResource archive}"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </RadioButton.Style>
            </RadioButton>
        </DataTemplate>
        <Style x:Key="ChatListButtonBaseStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="AllChatsButtonStyle" BasedOn="{StaticResource ChatListButtonBaseStyle}" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid x:Name="bgAll" Opacity=".6" Grid.ColumnSpan="2"/>
                                <Path
                                    Data="{TemplateBinding Content}"
                                    Margin="20,0"
                                    Fill="Black"
                                    HorizontalAlignment="Left"
                                    Style="{StaticResource {x:Type Path}}"/>
                                <TextBlock
                                    Grid.Column="1"
                                    FontWeight="SemiBold"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Run Text="All Chats"/>
                                </TextBlock>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bgAll" Property="Background" Value="#dce1de"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="bgAll" Property="Background" Value="#dce1de"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ArchivedChatsButtonStyle" BasedOn="{StaticResource ChatListButtonBaseStyle}" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid x:Name="bgArchived" Opacity=".6" Grid.ColumnSpan="2"/>
                                <Path
                                    Data="{TemplateBinding Content}"
                                    Margin="20,0"
                                    Fill="Black"
                                    HorizontalAlignment="Left"
                                    Style="{StaticResource {x:Type Path}}"/>
                                <TextBlock
                                    Grid.Column="1"
                                    FontWeight="SemiBold"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Run Text="Archived ("/>
                                    <Run Text="{Binding DataContext.ArchivedChats.Count, ElementName=_Chats, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Run Text=")"/>
                                </TextBlock>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bgArchived" Property="Background" Value="#dce1de"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="bgArchived" Property="Background" Value="#dce1de"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <!--To-Do: Scrollbar Style-->
    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
        <Grid Margin="25, 15">
            <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                    <!--Archived Chats-->
                </Grid.RowDefinitions>
            
                <!--Pinned / Unpinned Chat List-->
            <StackPanel>
                <!--Title-->
                <ToggleButton
                        x:Name="allButton"
                        Content="{StaticResource allchats}"
                        Style="{StaticResource AllChatsButtonStyle}"/>
                <!--All Chat List-->
                <ItemsControl
                ItemsSource="{Binding Chats, UpdateSourceTrigger=PropertyChanged}"
                ItemTemplate="{StaticResource ChatButtonItemTemplate}"
                Padding="0, 15">
                    <ItemsControl.Style>
                        <Style TargetType="{x:Type ItemsControl}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=allButton}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=allButton}" Value="False">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.Style>
                </ItemsControl>
            </StackPanel>

            <StackPanel Grid.Row="1">
                <StackPanel.Style>
                    <Style TargetType="{x:Type StackPanel}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DataContext.ArchivedChats.Count, ElementName=_Chats, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <!--Title-->
                <ToggleButton
                    x:Name="archiveButton"
                    Content="{StaticResource archive}"
                    Style="{StaticResource ArchivedChatsButtonStyle}"/>
                
                <!--Archived Chat List-->
                <ItemsControl
                ItemsSource="{Binding ArchivedChats, UpdateSourceTrigger=PropertyChanged}"
                ItemTemplate="{StaticResource ChatButtonItemTemplate}"
                Padding="0, 15">
                    <ItemsControl.Style>
                        <Style TargetType="{x:Type ItemsControl}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=archiveButton}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=archiveButton}" Value="False">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.Style>
                </ItemsControl>
            </StackPanel>
        </Grid>
    </ScrollViewer>
</UserControl>
